{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachines01_name": {
            "defaultValue": "vm01-standard",
            "type": "String"
        },
		"virtualMachines02_name": {
            "defaultValue": "vm02-standard",
            "type": "String"
        },
		"availabilitySets_name": {
        "defaultValue": "avset-standard01",
        "type": "String"
		},
        "virtualNetworks_name": {
            "defaultValue": "vnet-standard01",
            "type": "String"
        },
		
        "networkInterfacesvm01_name": {
            "defaultValue": "vm01-standard-nic0",
            "type": "String"
        },
		  "networkInterfacesvm02_name": {
            "defaultValue": "vm02-standard-nic0",
            "type": "String"
        },
     
        "networkSecurityGroups_nsg_name": {
            "defaultValue": "vm-standard01-nsg",
            "type": "String"
        },
		
  	"vaults_name": {
            "defaultValue": "standard01-rsv",
            "type": "String"
        },
	"virtualmachine01_vmSize": {
            "defaultValue": "Standard_B2s",
            "allowedValues": ["Standard_B2s", "Standard_B4ms", "Standard_D2s_v3",
	    "Standard_D4_v2", "Standard_D5_v2"],
	    "type": "String"
        },
	"virtualmachine02_vmSize": {
            "defaultValue": "Standard_B2s",
            "allowedValues": ["Standard_B2s", "Standard_B4ms", "Standard_D2s_v3",
	    "Standard_D4_v2", "Standard_D5_v2"],
	    "type": "String"
        },
    "virtualmachine01_diskSize": {
         "defaultValue": 128,
	    "allowedValues": [128, 256, 512, 1024],
	    "type": "int"
        },
	"virtualmachine02_diskSize": {
         "defaultValue": 128,
	    "allowedValues": [128, 256, 512, 1024],
	    "type": "int"
        },
    "virtualmachine01_DiskType": {
         "defaultValue": "Standard_LRS",
	 "allowedValues": ["Standard_LRS", "Premium_LRS", "StandardSSD_LRS", "UltraSSD_LRS", "Premium_ZRS", "StandardSSD_ZRS"],
	 "type": "String"
        },
		
    "virtualmachine02_DiskType": {
      "defaultValue": "Standard_LRS",
	 "allowedValues": ["Standard_LRS", "Premium_LRS", "StandardSSD_LRS", "UltraSSD_LRS", "Premium_ZRS", "StandardSSD_ZRS"],
	 "type": "String"
        },
	"adminUsername": {
	"type": "string"
			},
		
	"adminPassword": {
	"type": "securestring",
	"minLength": 12
	},

	"loadBalancers_name": {
    "defaultValue": "external-lb-stdpack02",
     "type": "String"
        },
		
    "publicIPAddresses_loadbalancer_name": {
"defaultValue": "loadbalancer-pip-stdpack02",
     "type": "String"
        }
	

    },

  "variables": {
    "vmName1": "[parameters('virtualMachines01_name')]",
	"vmName2": "[parameters('virtualMachines02_name')]",
    "vaultName": "[parameters('vaults_name')]",   
    "backupFabric": "Azure",
    "backupPolicyName": "DefaultPolicy",
    "protectionContainer1": "[concat('iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', variables('vmName1'))]",
	"protectionContainer2": "[concat('iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', variables('vmName2'))]",
    "protectedItem1": "[concat('vm;iaasvmcontainerv2;', resourceGroup().name, ';', variables('vmName1'))]",
	"protectedItem2": "[concat('vm;iaasvmcontainerv2;', resourceGroup().name, ';', variables('vmName2'))]"
  },

    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_nsg_name')]",
            "location": "centralindia",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
		{
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_loadbalancer_name')]",
            "location": "centralindia",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
     

        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_name')]",
            "location": "centralindia",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "subnet01",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
		
		        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-12-01",
            "name": "[parameters('availabilitySets_name')]",
            "location": "centralindia",
           
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 3

            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[parameters('virtualMachines01_name')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesvm01_name'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_name'))]"
				
            ],
            "properties": {
			 "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_B2ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines01_name'), '_disk1_2647e82bfccd46999304ffd03fdb8976')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
							"storageAccountType": "[parameters('virtualmachine01_DiskType')]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "DataDisk_01",
                            "createOption": "Empty",
                            "caching": "None",
                            "writeAcceleratorEnabled": false,
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                                
                            },
                            "diskSizeGB": 128,
                            "toBeDetached": false
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines01_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                 
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesvm01_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
		        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[parameters('virtualMachines02_name')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesvm02_name'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_name'))]"
            ],
            "properties": {
			 "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_B2ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines02_name'), '_disk1_2647e82bfccd46999304ffd03fdb8976')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
							"storageAccountType": "[parameters('virtualmachine02_DiskType')]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "DataDisk_02",
                            "createOption": "Empty",
                            "caching": "None",
                            "writeAcceleratorEnabled": false,
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                                
                            },
                            "diskSizeGB": 128,
                            "toBeDetached": false
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines02_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                 
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesvm02_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_nsg_name'), '/RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_name'), '/subnet01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfacesvm01_name')]",
            "location": "centralindia",
            "dependsOn": [
                
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_name'), 'subnet01')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]",
		"[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_name'), 'bp-01')]"
				
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                       
                            "privateIPAllocationMethod": "Dynamic",
                         
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_name'), 'subnet01')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
								"loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_name'), 'bp-01')]"
                                }
                            ],

			"loadBalancerInboundNatRules": [
            {
              "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')),'/inboundNatRules/rule01')]"
            }
          ]				
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
                }
            }
        },
		
		     {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfacesvm02_name')]",
            "location": "centralindia",
            "dependsOn": [
        
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_name'), 'subnet01')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]",
				  "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_name'), 'bp-01')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                        
                            "privateIPAllocationMethod": "Dynamic",
                         
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_name'), 'subnet01')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
								"loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_name'), 'bp-01')]"
                                }
                            ],
		"loadBalancerInboundNatRules": [
            {
              "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')),'/inboundNatRules/rule02')]"
            }
          ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
                }
            }
        },
		     {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2021-03-01",
            "name": "[parameters('vaults_name')]",
            "location": "centralindia",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2021-03-01",
            "name": "[concat(parameters('vaults_name'), '/DefaultPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2021-05-27T18:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2021-05-27T18:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
		{
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "apiVersion": "2020-02-02",
      "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('protectionContainer1'), '/', variables('protectedItem1'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName1'))]",
		"[resourceId('Microsoft.RecoveryServices/vaults', variables('vaultName'))]"
      ],
      "properties": {
        "protectedItemType": "Microsoft.Compute/virtualMachines",
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'), variables('backupPolicyName'))]",
        "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName1'))]"
	
      }
		},
			{
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "apiVersion": "2020-02-02",
      "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('protectionContainer2'), '/', variables('protectedItem2'))]",
      "dependsOn": [
   
		 "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName2'))]",
        "[resourceId('Microsoft.RecoveryServices/vaults', variables('vaultName'))]"
      ],
      "properties": {
        "protectedItemType": "Microsoft.Compute/virtualMachines",
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'), variables('backupPolicyName'))]",
  		"sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName2'))]"
      }
		},
		  {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-11-01",
            "name": "[parameters('loadBalancers_name')]",
            "location": "centralindia",
			 "dependsOn": [
               
		"[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_loadbalancer_name'))]"
				
			],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_loadbalancer_name'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "bp-01"
                    
                    }
                ],
                "loadBalancingRules": [],
                "probes": [
                    {
                        "name": "HP-01",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "rule01",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 54687,
                            "backendPort": 3389,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
							"backendIPConfiguration": {
      "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesvm01_name')), '/ipConfigurations/ipconfig1')]"
    } 	
                        }
                    },
                    {
                        "name": "rule02",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 54688,
                            "backendPort": 3389,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
							"backendIPConfiguration": {
      "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfacesvm02_name')), '/ipConfigurations/ipconfig1')]"
    } 
                        }
                    }
                ],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('loadBalancers_name'), '/bp-01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name'))]"
            ]
          
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('loadBalancers_name'), '/rule01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "frontendPort": 54687,
                "backendPort": 3389,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
	
			
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('loadBalancers_name'), '/rule02')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                },
                "frontendPort": 54688,
                "backendPort": 3389,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        }
    ]

}
